<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.imakerlab.bbs.mapper.LikesDao">
  <resultMap id="BaseResultMap" type="cn.imakerlab.bbs.model.po.Likes">
    <id column="likes_id" jdbcType="INTEGER" property="id" />
    <result column="likes_user_id" jdbcType="INTEGER" property="userId" />
    <result column="likes_article_id" jdbcType="INTEGER" property="articleId" />
    <result column="likes_is_like" jdbcType="TINYINT" property="isLike" />
    <result column="likes_is_collected" jdbcType="TINYINT" property="isCollected" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    likes.id as likes_id, likes.user_id as likes_user_id, likes.article_id as likes_article_id, 
    likes.is_like as likes_is_like, likes.is_collected as likes_is_collected
  </sql>
  <select id="selectByExample" parameterType="cn.imakerlab.bbs.model.po.LikesExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from likes likes
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from likes likes
    where likes.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from likes
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.imakerlab.bbs.model.po.LikesExample">
    delete from likes likes
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.imakerlab.bbs.model.po.Likes" useGeneratedKeys="true">
    insert into likes (user_id, article_id, is_like, 
      is_collected)
    values (#{userId,jdbcType=INTEGER}, #{articleId,jdbcType=INTEGER}, #{isLike,jdbcType=TINYINT}, 
      #{isCollected,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="cn.imakerlab.bbs.model.po.Likes" useGeneratedKeys="true">
    insert into likes
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="articleId != null">
        article_id,
      </if>
      <if test="isLike != null">
        is_like,
      </if>
      <if test="isCollected != null">
        is_collected,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="articleId != null">
        #{articleId,jdbcType=INTEGER},
      </if>
      <if test="isLike != null">
        #{isLike,jdbcType=TINYINT},
      </if>
      <if test="isCollected != null">
        #{isCollected,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.imakerlab.bbs.model.po.LikesExample" resultType="java.lang.Long">
    select count(*) from likes likes
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update likes likes
    <set>
      <if test="record.id != null">
        likes.id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        likes.user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.articleId != null">
        likes.article_id = #{record.articleId,jdbcType=INTEGER},
      </if>
      <if test="record.isLike != null">
        likes.is_like = #{record.isLike,jdbcType=TINYINT},
      </if>
      <if test="record.isCollected != null">
        likes.is_collected = #{record.isCollected,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update likes likes
    set likes.id = #{record.id,jdbcType=INTEGER},
      likes.user_id = #{record.userId,jdbcType=INTEGER},
      likes.article_id = #{record.articleId,jdbcType=INTEGER},
      likes.is_like = #{record.isLike,jdbcType=TINYINT},
      likes.is_collected = #{record.isCollected,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.imakerlab.bbs.model.po.Likes">
    update likes
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="articleId != null">
        article_id = #{articleId,jdbcType=INTEGER},
      </if>
      <if test="isLike != null">
        is_like = #{isLike,jdbcType=TINYINT},
      </if>
      <if test="isCollected != null">
        is_collected = #{isCollected,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.imakerlab.bbs.model.po.Likes">
    update likes
    set user_id = #{userId,jdbcType=INTEGER},
      article_id = #{articleId,jdbcType=INTEGER},
      is_like = #{isLike,jdbcType=TINYINT},
      is_collected = #{isCollected,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>