<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.imakerlab.bbs.mapper.ArticleDao">
  <resultMap id="BaseResultMap" type="cn.imakerlab.bbs.model.po.Article">
    <id column="article_id" jdbcType="INTEGER" property="id" />
    <result column="article_title" jdbcType="VARCHAR" property="title" />
    <result column="article_summary" jdbcType="VARCHAR" property="summary" />
    <result column="article_text" jdbcType="VARCHAR" property="text" />
    <result column="article_cover_url" jdbcType="VARCHAR" property="coverUrl" />
    <result column="article_likes" jdbcType="INTEGER" property="likes" />
    <result column="article_views" jdbcType="INTEGER" property="views" />
    <result column="article_release_time" jdbcType="DATE" property="releaseTime" />
    <result column="article_last_modified" jdbcType="DATE" property="lastModified" />
    <result column="article_delete_time" jdbcType="DATE" property="deleteTime" />
    <result column="article_label" jdbcType="VARCHAR" property="label" />
    <result column="article_author_name" jdbcType="VARCHAR" property="authorName" />
    <result column="article_author_id" jdbcType="INTEGER" property="authorId" />
    <result column="article_is_deleted" jdbcType="TINYINT" property="isDeleted" />
    <result column="article_type" jdbcType="VARCHAR" property="type" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    article.id as article_id, article.title as article_title, article.summary as article_summary, 
    article.`text` as `article_text`, article.cover_url as article_cover_url, article.likes as article_likes, 
    article.views as article_views, article.release_time as article_release_time, article.last_modified as article_last_modified, 
    article.delete_time as article_delete_time, article.`label` as `article_label`, article.author_name as article_author_name, 
    article.author_id as article_author_id, article.is_deleted as article_is_deleted, 
    article.`type` as `article_type`
  </sql>
  <select id="selectByExample" parameterType="cn.imakerlab.bbs.model.po.ArticleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from article article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from article article
    where article.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from article
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.imakerlab.bbs.model.po.ArticleExample">
    delete from article article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.imakerlab.bbs.model.po.Article" useGeneratedKeys="true">
    insert into article (title, summary, `text`, 
      cover_url, likes, views, 
      release_time, last_modified, delete_time, 
      `label`, author_name, author_id, 
      is_deleted, `type`)
    values (#{title,jdbcType=VARCHAR}, #{summary,jdbcType=VARCHAR}, #{text,jdbcType=VARCHAR}, 
      #{coverUrl,jdbcType=VARCHAR}, #{likes,jdbcType=INTEGER}, #{views,jdbcType=INTEGER}, 
      #{releaseTime,jdbcType=DATE}, #{lastModified,jdbcType=DATE}, #{deleteTime,jdbcType=DATE}, 
      #{label,jdbcType=VARCHAR}, #{authorName,jdbcType=VARCHAR}, #{authorId,jdbcType=INTEGER}, 
      #{isDeleted,jdbcType=TINYINT}, #{type,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="cn.imakerlab.bbs.model.po.Article" useGeneratedKeys="true">
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="title != null">
        title,
      </if>
      <if test="summary != null">
        summary,
      </if>
      <if test="text != null">
        `text`,
      </if>
      <if test="coverUrl != null">
        cover_url,
      </if>
      <if test="likes != null">
        likes,
      </if>
      <if test="views != null">
        views,
      </if>
      <if test="releaseTime != null">
        release_time,
      </if>
      <if test="lastModified != null">
        last_modified,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="label != null">
        `label`,
      </if>
      <if test="authorName != null">
        author_name,
      </if>
      <if test="authorId != null">
        author_id,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="type != null">
        `type`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="summary != null">
        #{summary,jdbcType=VARCHAR},
      </if>
      <if test="text != null">
        #{text,jdbcType=VARCHAR},
      </if>
      <if test="coverUrl != null">
        #{coverUrl,jdbcType=VARCHAR},
      </if>
      <if test="likes != null">
        #{likes,jdbcType=INTEGER},
      </if>
      <if test="views != null">
        #{views,jdbcType=INTEGER},
      </if>
      <if test="releaseTime != null">
        #{releaseTime,jdbcType=DATE},
      </if>
      <if test="lastModified != null">
        #{lastModified,jdbcType=DATE},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=DATE},
      </if>
      <if test="label != null">
        #{label,jdbcType=VARCHAR},
      </if>
      <if test="authorName != null">
        #{authorName,jdbcType=VARCHAR},
      </if>
      <if test="authorId != null">
        #{authorId,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.imakerlab.bbs.model.po.ArticleExample" resultType="java.lang.Long">
    select count(*) from article article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update article article
    <set>
      <if test="record.id != null">
        article.id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        article.title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.summary != null">
        article.summary = #{record.summary,jdbcType=VARCHAR},
      </if>
      <if test="record.text != null">
        article.`text` = #{record.text,jdbcType=VARCHAR},
      </if>
      <if test="record.coverUrl != null">
        article.cover_url = #{record.coverUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.likes != null">
        article.likes = #{record.likes,jdbcType=INTEGER},
      </if>
      <if test="record.views != null">
        article.views = #{record.views,jdbcType=INTEGER},
      </if>
      <if test="record.releaseTime != null">
        article.release_time = #{record.releaseTime,jdbcType=DATE},
      </if>
      <if test="record.lastModified != null">
        article.last_modified = #{record.lastModified,jdbcType=DATE},
      </if>
      <if test="record.deleteTime != null">
        article.delete_time = #{record.deleteTime,jdbcType=DATE},
      </if>
      <if test="record.label != null">
        article.`label` = #{record.label,jdbcType=VARCHAR},
      </if>
      <if test="record.authorName != null">
        article.author_name = #{record.authorName,jdbcType=VARCHAR},
      </if>
      <if test="record.authorId != null">
        article.author_id = #{record.authorId,jdbcType=INTEGER},
      </if>
      <if test="record.isDeleted != null">
        article.is_deleted = #{record.isDeleted,jdbcType=TINYINT},
      </if>
      <if test="record.type != null">
        article.`type` = #{record.type,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update article article
    set article.id = #{record.id,jdbcType=INTEGER},
      article.title = #{record.title,jdbcType=VARCHAR},
      article.summary = #{record.summary,jdbcType=VARCHAR},
      article.`text` = #{record.text,jdbcType=VARCHAR},
      article.cover_url = #{record.coverUrl,jdbcType=VARCHAR},
      article.likes = #{record.likes,jdbcType=INTEGER},
      article.views = #{record.views,jdbcType=INTEGER},
      article.release_time = #{record.releaseTime,jdbcType=DATE},
      article.last_modified = #{record.lastModified,jdbcType=DATE},
      article.delete_time = #{record.deleteTime,jdbcType=DATE},
      article.`label` = #{record.label,jdbcType=VARCHAR},
      article.author_name = #{record.authorName,jdbcType=VARCHAR},
      article.author_id = #{record.authorId,jdbcType=INTEGER},
      article.is_deleted = #{record.isDeleted,jdbcType=TINYINT},
      article.`type` = #{record.type,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.imakerlab.bbs.model.po.Article">
    update article
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="summary != null">
        summary = #{summary,jdbcType=VARCHAR},
      </if>
      <if test="text != null">
        `text` = #{text,jdbcType=VARCHAR},
      </if>
      <if test="coverUrl != null">
        cover_url = #{coverUrl,jdbcType=VARCHAR},
      </if>
      <if test="likes != null">
        likes = #{likes,jdbcType=INTEGER},
      </if>
      <if test="views != null">
        views = #{views,jdbcType=INTEGER},
      </if>
      <if test="releaseTime != null">
        release_time = #{releaseTime,jdbcType=DATE},
      </if>
      <if test="lastModified != null">
        last_modified = #{lastModified,jdbcType=DATE},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=DATE},
      </if>
      <if test="label != null">
        `label` = #{label,jdbcType=VARCHAR},
      </if>
      <if test="authorName != null">
        author_name = #{authorName,jdbcType=VARCHAR},
      </if>
      <if test="authorId != null">
        author_id = #{authorId,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.imakerlab.bbs.model.po.Article">
    update article
    set title = #{title,jdbcType=VARCHAR},
      summary = #{summary,jdbcType=VARCHAR},
      `text` = #{text,jdbcType=VARCHAR},
      cover_url = #{coverUrl,jdbcType=VARCHAR},
      likes = #{likes,jdbcType=INTEGER},
      views = #{views,jdbcType=INTEGER},
      release_time = #{releaseTime,jdbcType=DATE},
      last_modified = #{lastModified,jdbcType=DATE},
      delete_time = #{deleteTime,jdbcType=DATE},
      `label` = #{label,jdbcType=VARCHAR},
      author_name = #{authorName,jdbcType=VARCHAR},
      author_id = #{authorId,jdbcType=INTEGER},
      is_deleted = #{isDeleted,jdbcType=TINYINT},
      `type` = #{type,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>